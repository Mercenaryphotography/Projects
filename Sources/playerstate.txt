# Player States

# Starting Stats
Player_lvl=1
Player_exp=0 #Level ups increase base states depending on the level achieved.
Player_gold=0
exp_required=100
statusp=0       #Is the player Poisoned?

# Inventory
potion=0 # Potions full heal
dkey=0 # Dungeon Keys open locked chests
Gold_feather=0 #max luck up
silver_berry=0 #max hp up
emerald_potion=0 #max str up
antidote=0 #cures poison condition

#Does the player have a potion on them (can only hold 1)

# Warrior
if [ $class_weapon == "Sword" ] ; then
player_damages=( "1" "2" "3" "4" "5" )
Player_class=Warrior
Player_Health=100
Player_MaxHealth=100 #Used for healing to full health
Player_Strength=15	#Strength adds to the damage of your weapon
Player_Defense=10	#Defense subtracts from the enemey damage
Player_Luck=2 #luck improves to-hit chance and for running from combat

# Mage
elif [ $class_weapon == "Staff" ] ; then
player_damages=( "1" "2" "3" )
Player_class=Mage
Player_Health=75
Player_MaxHealth=75
Player_Strength=8
Player_Defense=6
Player_Luck=4
Player_Mana=20
Player_Maxmana=20

# Cutthroat
elif [ $class_weapon == "Dagger" ] ; then
player_damages=( "2" "3" "4" )
Player_class=Cutthroat
Player_Health=80
Player_MaxHealth=
Player_Strength=12
Player_Defense=10	
Player_Luck=8
fi
# Function to level up and increase stats
level_up() {
Player_lvl=$((Player_lvl + 1))
    # Define stat increases based on the class
    case $Player_class in
        "Warrior")
            Player_Health=$((Player_Health + 10 * Player_lvl))
            Player_MaxHealth=$((Player_MaxHealth + 10 * Player_lvl))
            Player_Strength=$((Player_Strength + 2 * Player_lvl))
            Player_Defense=$((Player_Defense + 2 * Player_lvl))
            Player_Luck=$((Player_Luck + 1 * Player_lvl))
            ;;
        "Mage")
            Player_Health=$((Player_Health + 8  * Player_lvl))
            Player_MaxHealth=$((Player_MaxHealth + 8 * Player_lvl))
            Player_Strength=$((Player_Strength + 1 * Player_lvl))
            Player_Defense=$((Player_Defense + 1 * Player_lvl))
            Player_Luck=$((Player_Luck + 1 * Player_lvl))
            Player_Mana=$((Player_Mana + 5 * Player_lvl))
            Player_Maxmana=$((Player_Maxmana + 5 * Player_lvl))
            ;;
        "Cutthroat")
            Player_Health=$((Player_Health + 6 * Player_lvl))
            Player_MaxHealth=$((Player_MaxHealth + 6 * Player_lvl))
            Player_Strength=$((Player_Strength + 1 * Player_lvl))
            Player_Defense=$((Player_Defense + 1 * Player_lvl))
            Player_Luck=$((Player_Luck + 2 * Player_lvl))
            ;;
    esac

    echo "Level Up! You are now level $Player_lvl"
    if [ $Player_class == Warrior ] || [ $Player_class == Cutthroat ] ; then
	echo "New Stats!!! Max Health $Player_Health, Strength $Player_Strength, Defense $Player_Defense, Luck $Player_Luck"
	sleep 2
	else
	echo "New Stats!!! Max Health $Player_MaxHealth, Max Mana $Player_Maxmana, Defense $Player_Defense, Luck $Player_Luck"
	sleep 2
	fi
}

check_level_up() {
    while true; do
        # Calculate the experience required for the next level
        if [ $Player_lvl -eq 1 ]; then
            exp_required=100
        else
            exp_required=$((100 + (Player_lvl - 2) * 150))
        fi
		# set the level cap at 20 
	if [ $Player_lvl -le 19 ] ; then
        # Check if the player has enough experience to level up
        if [ $Player_exp -ge $exp_required ]; then
            Player_exp=$((Player_exp - exp_required))  # Subtract the required experience for this level-up
			level_up
        else
            break  # Exit the loop if the player doesn't have enough experience for the next level
        fi
	else
	exp_required=MAX
		echo "You have reached the peak of your abilities, seek out boons if you need further boosts" 
	sleep 2
	break
	fi
    done
}


# Environment flags
Mountains=0
Lake=0
Plains=1
Ruins=0
Caves=0
River=0

# Story Flags
Witch_Amulet=missing
Witch_Heart=missing
Witch_Cauldron=missing
Witch_Eyes=missing
Witch_Book=missing

#NPC Flags
essalv="-15"